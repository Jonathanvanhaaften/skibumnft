server {
  listen 80; 
   server_name skibumnft.com;  
   location / {
    proxy_pass http://localhost:8082;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
   }
}

server{
listen [::]:80;
listen 80;
 server_name skibumnft.com www.skibumnft.com;  
  
    
   location /.well-known/acme-challenge/ {
    root /var/www/certbot;
}   
}


server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name skibumnft.com;

    # SSL code
    ssl_certificate /etc/letsencrypt/live/skibumnft.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/skibumnft.com/privkey.pem;

location / {
   proxy_pass http://localhost:8082;
 root /var/www/app/build;
    if ($prerender = 1) {
                rewrite (.*) /prerenderio last;
            }
   
 try_files $uri /index.html;
}
location /static/ {
    root /var/www/app/build/;
}

location /prerenderio {
     if ($prerender = 0) {
         return 404;
}

    proxy_set_header X-Prerender-Token  t4D10jdXBZyHCfpDDCrS;

    proxy_hide_header Cache-Control;
    add_header Cache-Control "private,max-age=600,must-revalidate";

            #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
            resolver 8.8.8.8 8.8.4.4;
            set $prerender_host "service.prerender.io";
            proxy_pass https://$prerender_host;
            rewrite .* /$scheme://$host$request_uri? break;
        }
gzip on;
gzip_disable "MSIE [1-6]\.(?!.*SV1)";
gzip_vary on;
gzip_types text/plain text/css text/javascript image/svg+xml image/x-icon application/javascript application/x-javascript;

}



## Docker
version: '3.8'
services: 

    backend:
        build:
            context: .
            dockerfile: React.Dockerfile
        ports: 
            - 8000:8000
        volumes: 
            - build:/app
        
    certbot:
        image: certbot/certbot:latest
        volumes:
            - ./data/certbot/www/:/var/www/certbot/:rw
            - ./data/certbot/conf/:/etc/letsencrypt/:rw
    nginx:
        image: nginx:latest
        ports: 
            - 8084:80
            - 4430:443
        expose:
            - "80"
            - "443"
        volumes: 
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
            - ./data/certbot/www:/var/www/certbot/:ro
            - ./data/certbot/conf/:/etc/nginx/ssl/:ro
            - build:/var/www/app
volumes:  
    build: